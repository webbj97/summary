(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{895:function(v,_,t){"use strict";t.r(_);var s=t(50),a=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"_1-tcp-ip-网络模型有哪几层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp-ip-网络模型有哪几层"}},[v._v("#")]),v._v(" 1.TCP/IP 网络模型有哪几层")]),v._v(" "),t("blockquote",[t("p",[v._v("对于同一台设备上的进程间通信，有很多种方式，比如有管道、消息队列、共享内存、信号等方式，而对于不同设备上的进程间通信，就需要网络通信，而设备是多样性的，所以要兼容多种多样的设备，就协商出了一套通用的网络协议。\n这个网络协议是分层的，每一层都有各自的作用和职责，接下来就根据「 TCP/IP 网络模型」分别对每一层进行介绍。")])]),v._v(" "),t("h2",{attrs:{id:"一、应用层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、应用层"}},[v._v("#")]),v._v(" 一、应用层")]),v._v(" "),t("p",[v._v("最上层的，也是我们能直接接触到的就是 "),t("font",{attrs:{color:"blue"}},[v._v("应用层（Application Layer）")]),v._v("，我们电脑或手机使用的应用软件都是在应用层实现。")],1),v._v(" "),t("p",[v._v("当两个不同设备的应用需要通信的时候，应用就把应用数据传给下一层，也就是传输层。所以，应用层只需要专注于为用户提供应用功能，比如"),t("code",[v._v("HTTP")]),v._v("、"),t("code",[v._v("DNS")]),v._v("、"),t("code",[v._v("FTP")]),v._v("、"),t("code",[v._v("SMTP")]),v._v("等。")]),v._v(" "),t("p",[v._v("应用层是不用去关心数据是如何传输的，就类似于，我们寄快递的时候，只需要把包裹交给快递员，由他负责运输快递，我们不需要关心快递是如何被运输的。")]),v._v(" "),t("p",[v._v("而且应用层是工作在操作系统中的用户态，传输层及以下则工作在内核态。")]),v._v(" "),t("h2",{attrs:{id:"二、传输层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、传输层"}},[v._v("#")]),v._v(" 二、传输层")]),v._v(" "),t("p",[t("font",{attrs:{color:"blue"}},[v._v("传输层（Transport Layer）")]),v._v("，是为应用层提供网络支持的。")],1),v._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/6e1490dac03b40dc80dc3647e30c311f.png",alt:"在这里插入图片描述"}})]),v._v(" "),t("p",[v._v("在传输层会有两个传输协议，分别是"),t("code",[v._v("TCP")]),v._v("和"),t("code",[v._v("UDP")]),v._v("。")]),v._v(" "),t("p",[t("code",[v._v("TCP")]),v._v("的全称叫"),t("strong",[v._v("传输控制协议")]),v._v("（Transmission Control Protocol），大部分应用使用的正是"),t("code",[v._v("TCP")]),v._v("传输层协议，比如HTTP应用层协议。"),t("code",[v._v("TCP")]),v._v("相比"),t("code",[v._v("UDP")]),v._v("多了很多特性，比如流量控制、超时重传、拥塞控制等，这些都是为了保证数据包能可靠地传输给对方。")]),v._v(" "),t("p",[t("code",[v._v("UDP")]),v._v("相对来说就很简单，简单到只负责发送数据包，不保证数据包是否能抵达对方，但它实时性相对更好，传输效率也高。")]),v._v(" "),t("p",[v._v("应用需要传输的数据可能会非常大，如果直接传输就不好控制，因此当传输层的数据包大小超过"),t("code",[v._v("MSS（TCP 最大报文段长度）")]),v._v("，就要将数据包分块，这样即使中途有一个分块丢失或损坏了，只需要重新发送这一个分块，而不用重新发送整个数据包。在 TCP 协议中，我们把每个分块称为一个 "),t("strong",[v._v("TCP段")]),v._v("（TCP Segment）。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/d8cd8a1021e14cdeb33cdaf062067262.png",alt:"在这里插入图片描述"}})]),v._v(" "),t("p",[v._v("当设备作为接收方时，传输层则要负责把数据包传给应用，但是一台设备上可能会有很多应用在接收或者传输数据，因此需要用一个编号将应用区分开来，这个编号就是端口。")]),v._v(" "),t("p",[v._v("比如"),t("code",[v._v("80端口")]),v._v("通常是Web服务器用的，"),t("code",[v._v("22端口")]),v._v("通常是远程登录服务器用的。而对于浏览器（客户端）中的每个标签栏都是一个独立的进程，操作系统会为这些进程分配临时的端口号。")]),v._v(" "),t("p",[v._v("由于传输层的报文中会携带端口号，因此接收方可以识别出该报文是发送给哪个应用。")]),v._v(" "),t("h2",{attrs:{id:"三、网络层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、网络层"}},[v._v("#")]),v._v(" 三、网络层")]),v._v(" "),t("p",[v._v("传输层可能看了上一节的描述，会认为是它在负责将数据从一个设备传输到另一个设备，事实上并不是。")]),v._v(" "),t("p",[v._v("实际场景中的网络环节是错综复杂的，中间有各种各样的线路和分叉路口，如果一个设备的数据要传输给另一个设备，就需要在各种各样的路径和节点进行选择，而传输层的设计理念是简单、高效、专注，如果传输层还负责这一块功能就有点违背设计原则了。")]),v._v(" "),t("p",[v._v("也就是说，我们不希望传输层协议处理太多的事情，只需要服务好应用即可，让其作为应用间数据传输的媒介，帮助实现应用到应用的通信，而实际的传输功能就交给下一层，也就是"),t("font",{attrs:{color:"blue"}},[v._v("网络层（Internet Layer）。")]),v._v("，此时应用层 —— 网络层之间的关系应该是这样的：")],1),v._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/2117f21dc0a64c21ad93a1902d984e7e.png",alt:"在这里插入图片描述"}})]),v._v(" "),t("p",[v._v("网络层最常使用的是 "),t("strong",[v._v("IP协议（Internet Protocol）")]),v._v("，IP协议会将传输层的报文作为数据部分，再加上IP包头组装成"),t("strong",[v._v("IP报文")]),v._v("，如果IP报文大小超过MTU（以太网中一般为 1500 字节）就会再次进行分片，得到一个即将发送到网络的IP报文。")]),v._v(" "),t("p",[v._v("那么从应用要传输的消息体，经过"),t("code",[v._v("应用层(1) -> 传输层(2) -> 网络层(3)")]),v._v("后可能是这样的:")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/7b9540c6e4ef4f8394b3cdbc5063926e.png",alt:"在这里插入图片描述"}})]),v._v(" "),t("p",[v._v("网络层负责将数据从一个设备传输到另一个设备，世界上那么多设备，又该如何找到对方呢？因此，网络层需要有区分设备的编号。")]),v._v(" "),t("p",[v._v("我们一般用 IP 地址给设备进行编号，对于"),t("code",[v._v("IPv4")]),v._v("协议， IP地址共"),t("code",[v._v("32")]),v._v("位，分成了四段（比如，192.168.100.1），每段是8位。只有一个单纯的IP地址虽然做到了区分设备，但是寻址起来就特别麻烦，全世界那么多台设备，难道一个一个去匹配？这显然不科学。因此，需要将 IP 地址分成两种意义：")]),v._v(" "),t("ul",[t("li",[v._v("网络号，负责标识该 IP 地址是属于哪个「子网」的；")]),v._v(" "),t("li",[v._v("主机号，负责标识同一「子网」下的不同主机；")])]),v._v(" "),t("p",[v._v("怎么分的呢？这需要配合"),t("font",{attrs:{color:"blue"}},[v._v("子网掩码")]),v._v("才能算出 IP 地址 的网络号和主机号。")],1),v._v(" "),t("p",[v._v("拿一个IP地址和子网掩码举例：")]),v._v(" "),t("p",[v._v("将"),t("code",[v._v("10.100.122.2")]),v._v(" 和 "),t("code",[v._v("255.255.255.0")]),v._v(" 进行按位"),t("font",{attrs:{color:"red"}},[v._v("与")]),v._v("运算，就可以得到网络号和主机号")],1),v._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// IP")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("00001010")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1100100")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1111010")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("00000000")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 子网掩码")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("11111111")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("11111111")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("11111111")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("00000000")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 结果")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("00001010")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1100100")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1111010")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("00000000")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 这里前24为就是网络好，后8位就是主机号")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 10进制")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("10.100")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v(".122")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v(".0")]),v._v("\n")])])]),t("p",[v._v("那么在寻址的过程中，先匹配到相同的网络号（10.1.122），才会去找对应的主机（0）。")]),v._v(" "),t("h2",{attrs:{id:"四、网络接口层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、网络接口层"}},[v._v("#")]),v._v(" 四、网络接口层")]),v._v(" "),t("p",[v._v("生成了 IP 头部之后，接下来要交给网络接口层（Link Layer）在 IP 头部的前面加上 MAC 头部，并封装成数据帧（Data frame）发送到网络上。")]),v._v(" "),t("p",[v._v("注意，此时我们的模型已经达到四层，并应该是这个样子的：")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/c05c8c5a0a5b45fab9947ab788670f4f.png",alt:"在这里插入图片描述"}})]),v._v(" "),t("p",[v._v("IP 头部中的接收方 IP 地址表示网络包的目的地，通过这个地址我们就可以判断要将包发到哪里，但在以太网的世界中，这个思路是行不通的。")]),v._v(" "),t("p",[v._v("什么是以太网呢？电脑上的以太网接口，Wi-Fi接口，以太网交换机、路由器上的千兆，万兆以太网口，还有网线，它们都是以太网的组成部分。以太网就是一种在「局域网」内，把附近的设备连接起来，使它们之间可以进行通讯的技术。")]),v._v(" "),t("p",[v._v("以太网在判断网络包目的地时和 IP 的方式不同，因此必须采用相匹配的方式才能在以太网中将包发往目的地，而 MAC 头部就是干这个用的，所以，在以太网进行通讯要用到 MAC 地址。")]),v._v(" "),t("p",[v._v("MAC 头部是以太网使用的头部，它包含了接收方和发送方的 MAC 地址等信息，我们可以通过 ARP 协议获取对方的 MAC 地址。")]),v._v(" "),t("p",[v._v("所以说，网络接口层主要为网络层提供「链路级别」传输的服务，负责在以太网、WiFi 这样的底层网络上发送原始数据包，工作在网卡这个层次，使用 MAC 地址来标识网络上的设备。")]),v._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),t("p",[v._v("综上所述，TCP/IP 网络通常是由上到下分成4层，分别是"),t("code",[v._v("应用层")]),v._v("，"),t("code",[v._v("传输层")]),v._v("，"),t("code",[v._v("网络层")]),v._v("和"),t("code",[v._v("网络接口层")]),v._v("。")]),v._v(" "),t("p",[v._v("数据封装也应该是这样的：")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/2a6f6b1219d0448ba91096e074ecfdad.png",alt:"在这里插入图片描述"}})]),v._v(" "),t("h2",{attrs:{id:"写在最后"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写在最后"}},[v._v("#")]),v._v(" 写在最后")]),v._v(" "),t("p",[v._v("将四层网络模型作为《网络系列》的第一篇文章，它更像是一篇导读，可以发现里面有很多的概念和知识点可以延伸，不妨一起期待一下吧～")])])}),[],!1,null,null,null);_.default=a.exports}}]);