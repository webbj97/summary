(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{765:function(t,a,s){"use strict";s.r(a);var e=s(50),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"剑指-offer-11-旋转数组的最小数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#剑指-offer-11-旋转数组的最小数字"}},[t._v("#")]),t._v(" 剑指 Offer 11. 旋转数组的最小数字")]),t._v(" "),s("p",[t._v("把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。")]),t._v(" "),s("p",[s("strong",[t._v("示例 1：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("输入：[3,4,5,1,2]\n输出：1\n")])])]),s("p",[s("strong",[t._v("示例 2：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("输入：[2,2,2,0,1]\n输出：0\n")])])]),s("p",[t._v("注意：本题与主站 154 题相同：https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/")]),t._v(" "),s("ul",[s("li",[t._v("递增数组经过旋转后得到了现在的数组")]),t._v(" "),s("li",[t._v("涉及到排序的数组可以考虑二分法")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);