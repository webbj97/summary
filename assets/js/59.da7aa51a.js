(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{812:function(t,a,s){"use strict";s.r(a);var r=s(50),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),s("p",[t._v("链表是前端开发者很难接触到（用到）的数据结构，因为未知，导致我们对这一块知识存在抵触的情绪，这样的恶性循环很难打破，今天我们顶住对它的“恐惧”，一起揭开它神奇的面纱，加油！")]),t._v(" "),s("h2",{attrs:{id:"一、链表简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、链表简介"}},[t._v("#")]),t._v(" 一、链表简介")]),t._v(" "),s("p",[t._v("与数组相似，链表也是一种线性数据结构。这里有一个例子：")]),t._v(" "),s("p",[t._v("本质上是一个一个节点，通过next指针链接下一个节点，")]),t._v(" "),s("p",[t._v("正如你所看到的，链表中的每个元素实际上是一个单独的对象，而所有对象都通过每个元素中的引用字段链接在一起。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("单链表")])]),t._v(" "),s("li",[s("p",[t._v("双链表")])])]),t._v(" "),s("h4",{attrs:{id:"_1-1-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-操作"}},[t._v("#")]),t._v(" 1.1 操作")]),t._v(" "),s("p",[t._v("查找：O(n)")]),t._v(" "),s("p",[t._v("插入：O(1)")]),t._v(" "),s("p",[t._v("删除：O(1)")]),t._v(" "),s("h2",{attrs:{id:"二、单链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、单链表"}},[t._v("#")]),t._v(" 二、单链表")]),t._v(" "),s("h2",{attrs:{id:"三、双指针技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、双指针技巧"}},[t._v("#")]),t._v(" 三、双指针技巧")]),t._v(" "),s("h2",{attrs:{id:"四、双链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、双链表"}},[t._v("#")]),t._v(" 四、双链表")]),t._v(" "),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("p",[t._v("链表有两种类型：单链表和双链表。上面给出的例子是一个单链表，这里有一个双链表的例子：")]),t._v(" "),s("p",[t._v("我们将在接下来的章节中介绍更多内容。完成后，你将：")]),t._v(" "),s("p",[t._v("了解单链表和双链表的结构；\n在单链表或双链表中实现遍历、插入和删除；\n分析在单链表或双链表中的各种操作的复杂度；\n在链表中使用双指针技巧（快指针慢指针技巧）；\n解决一些经典问题，例如反转链表；\n分析你设计的算法的复杂度；\n积累设计和调试的经验。")])])}),[],!1,null,null,null);a.default=_.exports}}]);