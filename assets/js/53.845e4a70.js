(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{807:function(t,a,s){"use strict";s.r(a);var n=s(50),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"环形链表ii"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环形链表ii"}},[t._v("#")]),t._v(" 环形链表II")]),t._v(" "),s("h2",{attrs:{id:"一、题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、题目"}},[t._v("#")]),t._v(" 一、题目")]),t._v(" "),s("p",[t._v("给定一个链表，判断链表中是否有环。")]),t._v(" "),s("p",[t._v("为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是 -1，则在该链表中没有环。注意，pos 仅仅是用于标识环的情况，并不会作为参数传递到函数中。")]),t._v(" "),s("p",[s("strong",[t._v("示例 1：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("输入：head = [3,2,0,-4], pos = 1\n输出：返回索引为 1 的链表节点\n解释：链表中有一个环，其尾部连接到第二个节点。\n")])])]),s("h2",{attrs:{id:"题解-快慢指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题解-快慢指针"}},[t._v("#")]),t._v(" 题解（快慢指针）")]),t._v(" "),s("ul",[s("li",[t._v("一个有环的链表，比作一个环形跑道，跑的快的运动员迟早会再次和跑得慢的运动员相遇")]),t._v(" "),s("li",[t._v("慢指针一次移动 1 位，快指针一次移动 2 位，快指针如果跑道了终点，证明无环，否则一定会相遇")]),t._v(" "),s("li",[t._v("快指针比漫指针多走1位，不管成环的地方在哪里，两者一定会相遇")])]),t._v(" "),s("p",[t._v("我们简单的推导一下：")]),t._v(" "),s("ul",[s("li",[t._v("起点->成环点距离："),s("code",[t._v("a")])]),t._v(" "),s("li",[t._v("节点内相遇点，距离节点起始位置距离："),s("code",[t._v("b")])]),t._v(" "),s("li",[t._v("环的长度："),s("code",[t._v("c")])]),t._v(" "),s("li",[t._v("慢指针在环内走了"),s("code",[t._v("n1")]),t._v("圈")]),t._v(" "),s("li",[t._v("快指针在环内走了"),s("code",[t._v("n2")]),t._v("圈")])]),t._v(" "),s("p",[s("strong",[t._v("推导：")])]),t._v(" "),s("ol",[s("li",[t._v("慢指针一次一步，相遇时经过了："),s("code",[t._v("a + b + c * n1")]),t._v(";")]),t._v(" "),s("li",[t._v("快指针一次二步，相遇时经过了: "),s("code",[t._v("a + b + c * n2")]),t._v(";")])]),t._v(" "),s("p",[t._v("因为要计算的是相对位置，所以n1、n2的取值完全不影响相对位置，所以取最理想情况"),s("code",[t._v("n1 = 0; n2 = 1")]),t._v(";")]),t._v(" "),s("p",[t._v("如果我们将n1、n2设置为0，那只有一种情况，就是环在起点，"),s("code",[t._v("a = b = 0")]),t._v(";")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("( a + b ) * 2 = ( a + b + c)  =>  a = c - b\n")])])]),s("p",[s("strong",[t._v("结论：")])]),t._v(" "),s("p",[t._v("这样我们就得到了，起点->成环点 === 相遇点->成环点")]),t._v(" "),s("p",[s("strong",[t._v("代码：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ListNode} head\n * @return {ListNode}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("detectCycle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" slow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" fast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 快指针 走到终点，证明无环")]),t._v("\n        slow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" slow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" slow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新指针在起点，快指针在相遇点")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 起点->成环点 === 相遇点->成环点")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个节点再次相遇时，一定在成环点")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" fast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                fast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"三、写在最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、写在最后"}},[t._v("#")]),t._v(" 三、写在最后")]),t._v(" "),s("p",[t._v("本文是链表-双指针思路的第二题，通过指针速度差异，来达到验证目的。其中包含了一系列的思考，刚接触的同学可以自己动手画一画。加油！")]),t._v(" "),s("p",[t._v("如果对你有所帮助不妨给本项目的"),s("a",{attrs:{href:"https://github.com/webbj97/summary",target:"_blank",rel:"noopener noreferrer"}},[t._v("github 点个 star"),s("OutboundLink")],1),t._v("，这是对我最大的鼓励～")]),t._v(" "),s("p",[s("strong",[t._v("关于我")])]),t._v(" "),s("ul",[s("li",[t._v("花名：余光")]),t._v(" "),s("li",[t._v("WX：j565017805")]),t._v(" "),s("li",[t._v("沉迷 JS，水平有限，虚心学习中")])]),t._v(" "),s("p",[s("strong",[t._v("其他沉淀")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://webbj97.github.io/summary/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端进阶笔记"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://webbj97.github.io/summary/algorithm/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 版 LeetCode 题解"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://yuguang.blog.csdn.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN"),s("OutboundLink")],1)])]),t._v(" "),s("p",{attrs:{align:"center"}},[s("img",{attrs:{src:"https://hlgcdn.oss-cn-hangzhou.aliyuncs.com/hlg-ui/1607504321645897/yuguang-vue-bottom.gif",width:"100%"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);