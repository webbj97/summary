(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{794:function(t,a,s){"use strict";s.r(a);var r=s(50),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"二分法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二分法"}},[t._v("#")]),t._v(" 二分法")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("二分法又可以被称为二分查找，它描述了在有序集合中搜索特定值的过程。广义的二分查找是将问题的规模尽可能的缩小到原有的一半")])]),t._v(" "),s("p",[t._v("对于二分法的思想大家都能讲出几句，但我们仍然很难讲其与实际应用完美的结合到一起，所以我们尽量汇总二分法的应用场景，和大家一起深入，共勉！")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#一、常见问题"}},[t._v("一、常见问题")])]),s("li",[s("a",{attrs:{href:"#二、二分查找中使用的术语"}},[t._v("二、二分查找中使用的术语")])]),s("li",[s("a",{attrs:{href:"#三、模版-i-基础二分查找"}},[t._v("三、模版 I - 基础二分查找")])]),s("li",[s("a",{attrs:{href:"#四、模版-ii-依赖当前元素与右元素的关系"}},[t._v("四、模版 II - 依赖当前元素与右元素的关系")])]),s("li",[s("a",{attrs:{href:"#五、模板-iii-依赖当前元素与左右两个元素之间的关系"}},[t._v("五、模板 III - 依赖当前元素与左右两个元素之间的关系")])]),s("li",[s("a",{attrs:{href:"#六、二分查找模板分析"}},[t._v("六、二分查找模板分析")])]),s("li",[s("a",{attrs:{href:"#七、其他经典问题"}},[t._v("七、其他经典问题")])]),s("li",[s("a",{attrs:{href:"#八、写在最后"}},[t._v("八、写在最后")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"一、常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、常见问题"}},[t._v("#")]),t._v(" 一、常见问题")]),t._v(" "),s("p",[t._v("给定一个由数字组成的有序数组 "),s("code",[t._v("nums")]),t._v("，并给你一个数字 "),s("code",[t._v("target")]),t._v("。问 "),s("code",[t._v("nums")]),t._v(" 中是否存在 "),s("code",[t._v("target")]),t._v("。如果存在，则返回其在 "),s("code",[t._v("nums")]),t._v(" 中的索引。如果不存在，则返回 - 1。")]),t._v(" "),s("p",[t._v("这是二分查找中最简单的一种形式。当然二分查找也有很多的变形，这也是二分查找容易出错，难以掌握的原因。")]),t._v(" "),s("p",[t._v("常见变体有：")]),t._v(" "),s("ul",[s("li",[t._v("如果存在多个满足条件的元素，返回最左边满足条件的索引。")]),t._v(" "),s("li",[t._v("如果存在多个满足条件的元素，返回最右边满足条件的索引。")]),t._v(" "),s("li",[t._v("数组不是整体有序的。 比如先升序再降序，或者先降序再升序。")]),t._v(" "),s("li",[t._v("将一维数组变成二维数组...等等")])]),t._v(" "),s("h2",{attrs:{id:"二、二分查找中使用的术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、二分查找中使用的术语"}},[t._v("#")]),t._v(" 二、二分查找中使用的术语")]),t._v(" "),s("p",[t._v("如前所述，二分查找是一种在每次比较之后将查找空间一分为二的算法。每次需要查找集合中的索引或元素时，都应该考虑二分查找。如果集合是无序的，我们可以总是在应用二分查找之前先对其进行排序。但要注意排序的成本")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("target")]),t._v(": 要查找的值")]),t._v(" "),s("li",[s("code",[t._v("index")]),t._v(": 查找时的当前位置")]),t._v(" "),s("li",[s("code",[t._v("left")]),t._v(" 和 "),s("code",[t._v("right")]),t._v(": 左右指针")]),t._v(" "),s("li",[s("code",[t._v("mid")]),t._v(": 左右指针的中点，用来确定我们应该向左查找还是向右查找的索引")])]),t._v(" "),s("p",[t._v("在最简单的形式中，二分查找对具有指定左索引和右索引的连续序列进行操作。这就是所谓的"),s("strong",[t._v("查找空间")]),t._v("。二分查找维护查找空间的左、右和中间指示符，并比较查找目标或将查找条件应用于集合的中间值；如果条件不满足或值不相等，则清除目标不可能存在的那一半，并在剩下的一半上继续查找，直到成功为止。如果查以空的一半结束，则无法满足条件，并且无法找到目标。")]),t._v(" "),s("p",[s("strong",[t._v("注意：")])]),t._v(" "),s("ol",[s("li",[t._v("二分法搜索可以采用许多替代形式")]),t._v(" "),s("li",[t._v("可能并不总是直接搜索特定值")]),t._v(" "),s("li",[t._v("你不一定能直接缩小一半的查找范围")]),t._v(" "),s("li",[t._v("...")])]),t._v(" "),s("p",[t._v("看过之后的几个模版，并结合配套的例题，相信你会有自己的想法。")]),t._v(" "),s("h2",{attrs:{id:"三、模版-i-基础二分查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、模版-i-基础二分查找"}},[t._v("#")]),t._v(" 三、模版 I - 基础二分查找")]),t._v(" "),s("p",[t._v("模版 I 是基础的二分查找，用于查找可以通过访问数组中的单个索引来确定的元素或条件。")]),t._v(" "),s("h4",{attrs:{id:"_3-1-复杂度分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-复杂度分析"}},[t._v("#")]),t._v(" 3.1 复杂度分析")]),t._v(" "),s("ul",[s("li",[t._v("平均时间复杂度： "),s("code",[t._v("O(logN)")])]),t._v(" "),s("li",[t._v("最坏时间复杂度： "),s("code",[t._v("O(logN)")])]),t._v(" "),s("li",[t._v("最优时间复杂度： "),s("code",[t._v("O(1)")])])]),t._v(" "),s("h4",{attrs:{id:"_3-2-关键点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-关键点"}},[t._v("#")]),t._v(" 3.2 关键点")]),t._v(" "),s("ul",[s("li",[t._v("二分查找的最基础和最基本的形式。")]),t._v(" "),s("li",[t._v("查找条件可以在不与元素的两侧进行比较的情况下确定（或使用它周围的特定元素）。")]),t._v(" "),s("li",[t._v("不需要后处理，因为每一步中，你都在检查是否找到了元素。如果到达末尾，则知道未找到该元素。")])]),t._v(" "),s("h4",{attrs:{id:"_3-3-区分语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-区分语法"}},[t._v("#")]),t._v(" 3.3 区分语法")]),t._v(" "),s("ol",[s("li",[t._v("初始条件：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("left = 0")])]),t._v(" "),s("li",[s("code",[t._v("right = arrar.length-1 或 number")])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("终止："),s("code",[t._v("left > right")])]),t._v(" "),s("li",[t._v("向左查找："),s("code",[t._v("right = mid-1")])]),t._v(" "),s("li",[t._v("向右查找："),s("code",[t._v("left = mid+1")])])]),t._v(" "),s("h4",{attrs:{id:"_3-4-javascript-基础模版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-javascript-基础模版"}},[t._v("#")]),t._v(" 3.4 javascript 基础模版")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("search")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始左边界")]),t._v("\n  right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始右边界")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//防止溢出")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 收缩左边界")]),t._v("\n      left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 收缩右边界")]),t._v("\n      right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找到了当前值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-5-代码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-代码分析"}},[t._v("#")]),t._v(" 3.5 代码分析")]),t._v(" "),s("ol",[s("li",[t._v("确定初始的左右边界:\n"),s("ul",[s("li",[s("code",[t._v("left")]),t._v(": 0")]),t._v(" "),s("li",[s("code",[t._v("right")]),t._v(": nums.length-1")]),t._v(" "),s("li",[s("code",[t._v("mid")]),t._v(": (left + (right - left) >> 1)")])])]),t._v(" "),s("li",[t._v("如果中间元素值"),s("code",[t._v("nums[mid]")]),t._v(" < target：证明中间值左侧包括中间值都不符合要求，可以直接排除，"),s("code",[t._v("left = mid + 1")])]),t._v(" "),s("li",[t._v("如果中间元素值"),s("code",[t._v("nums[mid]")]),t._v("：证明中间值右侧包括中间值都不符合要求，可以直接排除，"),s("code",[t._v("right = mid - 1")])]),t._v(" "),s("li",[t._v("如果中间元素值"),s("code",[t._v("nums[mid]")]),t._v(" = target：直接返回"),s("code",[t._v("mid")]),t._v("的下标")]),t._v(" "),s("li",[t._v("重新定义了左右边界，也需要重新计算中间值，我们需要继续进行范围的排除")]),t._v(" "),s("li",[t._v("定义搜索的条件，应该是搜索区间都不为空，即"),s("code",[t._v("left <= right")])])]),t._v(" "),s("h4",{attrs:{id:"_3-6-leetcode-实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-leetcode-实战"}},[t._v("#")]),t._v(" 3.6 LeetCode 实战")]),t._v(" "),s("p",[t._v("下面五题，难度递增，每篇题解都包含原题链接、模版分析、Js 题解，大家可以放心食用，我们一起加油～")]),t._v(" "),s("ol",[s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/1-1.html"}},[t._v("二分查找（easy）")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/1-2.html"}},[t._v("搜索插入的位置（easy）")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/1-3.html"}},[t._v("x 的平方根（easy）")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/1-4.html"}},[t._v("猜数字大小（easy）")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/1-5.html"}},[t._v("搜索旋转排序数组（middle）")])],1)]),t._v(" "),s("h2",{attrs:{id:"四、模版-ii-依赖当前元素与右元素的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、模版-ii-依赖当前元素与右元素的关系"}},[t._v("#")]),t._v(" 四、模版 II - 依赖当前元素与右元素的关系")]),t._v(" "),s("p",[t._v("模板 II 是二分查找的高级模板。它用于查找需要访问数组中当前索引及其直接右邻居索引的元素或条件。")]),t._v(" "),s("h4",{attrs:{id:"_4-1-关键点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-关键点"}},[t._v("#")]),t._v(" 4.1 关键点")]),t._v(" "),s("ul",[s("li",[t._v("查找条件需要访问元素的直接右邻居。")]),t._v(" "),s("li",[t._v("使用元素的右邻居来确定是否满足条件，并决定是向左还是向右。")]),t._v(" "),s("li",[t._v("保证查找空间在每一步中至少有 2 个元素。")]),t._v(" "),s("li",[t._v("需要进行后处理。 当你剩下 1 个元素时，循环 / 递归结束。 需要评估剩余元素是否符合条件。")])]),t._v(" "),s("h4",{attrs:{id:"_4-2-区分语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-区分语法"}},[t._v("#")]),t._v(" 4.2 区分语法")]),t._v(" "),s("ul",[s("li",[t._v("初始条件：left = 0, right = length")]),t._v(" "),s("li",[t._v("终止：left == right")]),t._v(" "),s("li",[t._v("向左查找：right = mid 这是因为向右判断，一般需要保留比较元素，否则某些晴情况下会丢失数据")]),t._v(" "),s("li",[t._v("向右查找：left = mid+1")])]),t._v(" "),s("h4",{attrs:{id:"_4-3-javascript-基础模版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-javascript-基础模版"}},[t._v("#")]),t._v(" 4.3 javascript 基础模版")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("search")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始左边界")]),t._v("\n  right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始右边界")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//防止溢出")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继续寻找左侧是否仍存在满足条件的元素，但包含当前元素")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-4-代码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-代码分析"}},[t._v("#")]),t._v(" 4.4 代码分析")]),t._v(" "),s("p",[t._v("首先定义搜索区间为 [left, right]，注意是左右都闭合，之后会用到这个点。")]),t._v(" "),s("ol",[s("li",[t._v("终止搜索条件为 left <= right。")]),t._v(" "),s("li",[t._v("循环体内，我们不断计算 mid ，并将 nums[mid] 与 目标值比对。")]),t._v(" "),s("li",[t._v("如果 nums[mid] 等于目标值， 则收缩左边界，注意它此时不代表最终结果")]),t._v(" "),s("li",[t._v("如果 nums[mid] 小于目标值， 说明目标值在 mid 右侧，这个时候搜索区间可缩小为 [mid + 1, right]")]),t._v(" "),s("li",[t._v("如果 nums[mid] 大于目标值， 说明目标值在 mid 左侧，这个时候搜索区间可缩小为 [left, mid - 1]")]),t._v(" "),s("li",[t._v("最后我们要判断 left 值是否等于 target，如果不等于，证明没找到")]),t._v(" "),s("li",[t._v("如果 left 出了右边边界了，说明也没有找到")])]),t._v(" "),s("h4",{attrs:{id:"_4-5-leetcode-实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-leetcode-实战"}},[t._v("#")]),t._v(" 4.5 LeetCode 实战")]),t._v(" "),s("p",[t._v("下面 3 题，难度递增，每篇题解都包含原题链接、模版分析、Js 题解，大家可以放心食用，我们一起加油～")]),t._v(" "),s("ol",[s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/2-1.html"}},[t._v("第一个错误的版本（easy）")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/2-2.html"}},[t._v("寻找峰值（middle）")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/2-3.html"}},[t._v("寻找旋转排序数组中的最小值（middle）")])],1)]),t._v(" "),s("h2",{attrs:{id:"五、模板-iii-依赖当前元素与左右两个元素之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、模板-iii-依赖当前元素与左右两个元素之间的关系"}},[t._v("#")]),t._v(" 五、模板 III - 依赖当前元素与左右两个元素之间的关系")]),t._v(" "),s("p",[t._v("模板 III 是二分查找的另一种独特形式。它用于搜索需要访问当前索引及其在数组中的直接左右邻居索引的元素或条件。")]),t._v(" "),s("h4",{attrs:{id:"_5-1-关键点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-关键点"}},[t._v("#")]),t._v(" 5.1 关键点")]),t._v(" "),s("ul",[s("li",[t._v("实现二分查找的另一种方法。")]),t._v(" "),s("li",[t._v("搜索条件需要访问元素的直接左右邻居。")]),t._v(" "),s("li",[t._v("使用元素的邻居来确定它是向右还是向左。")]),t._v(" "),s("li",[t._v("保证查找空间在每个步骤中至少有 3 个元素。")]),t._v(" "),s("li",[t._v("需要进行后处理。当剩下 "),s("code",[t._v("2")]),t._v("个元素时，循环 / 递归结束。需要评估其余元素是否符合条件。")])]),t._v(" "),s("h4",{attrs:{id:"_5-2-区分语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-区分语法"}},[t._v("#")]),t._v(" 5.2 区分语法")]),t._v(" "),s("ul",[s("li",[t._v("初始条件："),s("code",[t._v("left = 0, right = length - 1")])]),t._v(" "),s("li",[t._v("终止："),s("code",[t._v("left + 1 === right")])]),t._v(" "),s("li",[t._v("向左查找："),s("code",[t._v("right = mid")])]),t._v(" "),s("li",[t._v("向右查找："),s("code",[t._v("left = mid")])])]),t._v(" "),s("h4",{attrs:{id:"_5-3-javascript-基础模版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-javascript-基础模版"}},[t._v("#")]),t._v(" 5.3 javascript 基础模版")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("binarySearch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_5-4-代码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-代码分析"}},[t._v("#")]),t._v(" 5.4 代码分析")]),t._v(" "),s("p",[t._v("因为我们的判断区间最少为 2 个元素，所以我们要注意循环的执行条件")]),t._v(" "),s("ol",[s("li",[t._v("简单的判断边界： "),s("code",[t._v("nums.length === 0，return -1")]),t._v("；")]),t._v(" "),s("li",[t._v("定义初始的左右边界："),s("code",[t._v("left = 0, right = nums.length - 1")]),t._v("；")]),t._v(" "),s("li",[t._v("确定执行条件："),s("code",[t._v("left + 1 < right")]),t._v("，这也意味着查找区间要存在 3 个元素；")]),t._v(" "),s("li",[t._v("向左查找时："),s("code",[t._v("right = mid")]),t._v("；")]),t._v(" "),s("li",[t._v("向左查找时："),s("code",[t._v("left = mid")]),t._v("；")]),t._v(" "),s("li",[t._v("判断剩下的两个元素哪个符合目标元素，并返回结果；")])]),t._v(" "),s("h4",{attrs:{id:"_5-5-leetcode-实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-leetcode-实战"}},[t._v("#")]),t._v(" 5.5 LeetCode 实战")]),t._v(" "),s("p",[t._v("下面 3 题，难度递增，每篇题解都包含原题链接、模版分析、Js 题解，大家可以放心食用，我们一起加油～")]),t._v(" "),s("ol",[s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/3-1.html"}},[t._v("在排序数组中查找元素的第一个和最后一个位置（hard）")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/3-2.html"}},[t._v("寻找峰值（middle）")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/3-3.html"}},[t._v("寻找旋转排序数组中的最小值（middle）")])],1)]),t._v(" "),s("h2",{attrs:{id:"六、二分查找模板分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、二分查找模板分析"}},[t._v("#")]),t._v(" 六、二分查找模板分析")]),t._v(" "),s("p",[t._v("本小结引自于"),s("a",{attrs:{href:"https://leetcode-cn.com/leetbook/read/binary-search/xewjg7/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode二分专题"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("上面提到的三个模版，大家在做题的时候很难完全套用进去，大部分时候，都是寻找最合适的方式并不断调整")]),t._v(" "),s("h4",{attrs:{id:"_6-1-模版差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-模版差异"}},[t._v("#")]),t._v(" 6.1 模版差异")]),t._v(" "),s("p",[t._v("这 3 个模板的不同之处在于：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201214095145794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2piajY1Njg4Mzl6,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),s("ul",[s("li",[t._v("左、中、右索引的分配。")]),t._v(" "),s("li",[t._v("循环或递归终止条件。")]),t._v(" "),s("li",[t._v("后处理的必要性。")])]),t._v(" "),s("p",[t._v("个人感觉模版I最实用（其实是另外两个模版掉头发啊！）")]),t._v(" "),s("h4",{attrs:{id:"_6-2-模版示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-模版示例"}},[t._v("#")]),t._v(" 6.2 模版示例")]),t._v(" "),s("p",[s("strong",[t._v("模板I (left <= right)")])]),t._v(" "),s("p",[t._v("二分查找的最基础和最基本的形式。")]),t._v(" "),s("ul",[s("li",[t._v("查找条件可以在不与元素的两侧进行比较的情况下确定（或使用它周围的特定元素）。")]),t._v(" "),s("li",[t._v("不需要后处理，因为每一步中，你都在检查是否找到了元素。如果到达末尾，则知道未找到该元素。")])]),t._v(" "),s("p",[s("strong",[t._v("模板II (left < right)")])]),t._v(" "),s("p",[t._v("一种实现二分查找的高级方法。")]),t._v(" "),s("ul",[s("li",[t._v("查找条件需要访问元素的直接右邻居。")]),t._v(" "),s("li",[t._v("使用元素的右邻居来确定是否满足条件，并决定是向左还是向右。")]),t._v(" "),s("li",[t._v("保证查找空间在每一步中至少有 2 个元素。")]),t._v(" "),s("li",[t._v("需要进行后处理。 当你剩下 1 个元素时，循环 / 递归结束。 需要评估剩余元素是否符合条件。")])]),t._v(" "),s("p",[s("strong",[t._v("模板III (left + 1 < right)")])]),t._v(" "),s("p",[t._v("实现二分查找的另一种方法。")]),t._v(" "),s("ul",[s("li",[t._v("搜索条件需要访问元素的直接左右邻居。")]),t._v(" "),s("li",[t._v("使用元素的邻居来确定它是向右还是向左。")]),t._v(" "),s("li",[t._v("保证查找空间在每个步骤中至少有 3 个元素。")]),t._v(" "),s("li",[t._v("需要进行后处理。 当剩下 2 个元素时，循环 / 递归结束。 需要评估其余元素是否符合条件。")])]),t._v(" "),s("h2",{attrs:{id:"七、其他经典问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、其他经典问题"}},[t._v("#")]),t._v(" 七、其他经典问题")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/4-1.html"}},[t._v("pow(n, x)")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/4-2.html"}},[t._v("有效的完全平方数")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/4-3.html"}},[t._v("寻找比目标字母大的最小字母")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/4-4.html"}},[t._v("统计有序矩阵中的负数")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/algorithm/dichotomy/4-5.html"}},[t._v("矩阵中战斗力最弱的 K 行")])],1)]),t._v(" "),s("h2",{attrs:{id:"八、写在最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、写在最后"}},[t._v("#")]),t._v(" 八、写在最后")]),t._v(" "),s("p",[t._v("本文解释了三种最常见的解题模版，并附上LeetCode实战，帮助我们理解二分法这种思想。")]),t._v(" "),s("p",[t._v("如果对你有所帮助不妨给本项目的"),s("a",{attrs:{href:"https://github.com/webbj97/summary",target:"_blank",rel:"noopener noreferrer"}},[t._v("github 点个 star"),s("OutboundLink")],1),t._v("，这是对我最大的鼓励")]),t._v(" "),s("p",[s("strong",[t._v("关于我")])]),t._v(" "),s("ul",[s("li",[t._v("花名：余光")]),t._v(" "),s("li",[t._v("WX：j565017805")]),t._v(" "),s("li",[t._v("沉迷 JS，水平有限，虚心学习中")])]),t._v(" "),s("p",[s("strong",[t._v("其他沉淀")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://webbj97.github.io/leetCode-Js/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github: Js 版 LeetCode 题解"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://webbj97.github.io/summary/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端进阶笔记"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://yuguang.blog.csdn.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN 博客汇总"),s("OutboundLink")],1)])]),t._v(" "),s("p",{attrs:{align:"center"}},[s("img",{attrs:{src:"https://hlgcdn.oss-cn-hangzhou.aliyuncs.com/hlg-ui/1607504321645897/yuguang-vue-bottom.gif",width:"100%"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);